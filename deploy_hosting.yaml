apiVersion: v1
kind: Namespace
metadata:
  name: burgerclicker
---
# === CONFIG del FRONT
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: burgerclicker
data:
  config.js: |
    window.APP_CFG = {
      apiBaseUrl: "/api",
      wsUrl: (location.protocol === "https:" ? "wss://" : "ws://") + location.host + "/ws"
    };
---
# === BACKEND
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: burgerclicker
  labels: { app: backend }
spec:
  replicas: 1
  selector:
    matchLabels: { app: backend }
  template:
    metadata:
      labels: { app: backend }
    spec:
      containers:
        - name: backend
          image: matyrela/backendburger:v1
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: burgerclicker
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
---
# === FRONTEND BLUE
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-blue
  namespace: burgerclicker
  labels: { app: frontend, color: blue }
spec:
  replicas: 1
  selector:
    matchLabels: { app: frontend, color: blue }
  template:
    metadata:
      labels: { app: frontend, color: blue }
    spec:
      containers:
        - name: nginx
          image: matyrela/clientburger:v1
          ports:
            - containerPort: 80
          volumeMounts:
            - name: runtime-config
              mountPath: /usr/share/nginx/html/runtime-config
      volumes:
        - name: runtime-config
          configMap:
            name: frontend-config
            items:
              - key: config.js
                path: config.js
---
# === FRONTEND GREEN
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-green
  namespace: burgerclicker
  labels: { app: frontend, color: green }
spec:
  replicas: 1
  selector:
    matchLabels: { app: frontend, color: green }
  template:
    metadata:
      labels: { app: frontend, color: green }
    spec:
      containers:
        - name: nginx
          image: matyrela/clientburger:v2
          ports:
            - containerPort: 80
          volumeMounts:
            - name: runtime-config
              mountPath: /usr/share/nginx/html/runtime-config
      volumes:
        - name: runtime-config
          configMap:
            name: frontend-config
            items:
              - key: config.js
                path: config.js
---
# === SERVICE del FRONTEND
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: burgerclicker
spec:
  selector:
    app: frontend
    color: blue
  ports:
    - port: 80
      targetPort: 80
---
# === TRAEFIK Middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-api
  namespace: burgerclicker
spec:
  stripPrefix:
    prefixes:
      - /api
---
# === TRAEFIK IngressRoute
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: burger-app
  namespace: burgerclicker
spec:
  entryPoints:
    - web
    - websecure
  routes:
    # API
    - match: Host(`burger.konoba.space`) && PathPrefix(`/api`)
      kind: Rule
      middlewares:
        - name: strip-api
      services:
        - name: backend-svc
          port: 8000
    # WebSocket
    - match: Host(`burger.konoba.space`) && PathPrefix(`/ws`)
      kind: Rule
      services:
        - name: backend-svc
          port: 8000
    # Frontend
    - match: Host(`burger.konoba.space`) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: frontend-svc
          port: 80

